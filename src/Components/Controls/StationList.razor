@using PCRadio.DataAccess.Models
@using System.Diagnostics

@if (SelectedStation != null)
{
    <PCRadio.Components.Controls.Player Station="@SelectedStation" />
}

@if (Stations == null || !Stations.Any())
{
    <div class="empty-message">No stations</div>
}
else
{
    <FluentListbox Items="@Stations" @bind-SelectedOption="@SelectedStation" OptionValue="@(x=>x?.Id.ToString())"
    Class="station-list">
    <OptionTemplate>
        <FluentCard Class="station-card">
            <img class="logo" src="@context?.Logo" alt="@context?.Name" loading="lazy" />
            <div style="width: 180px !important;">
                <div style="font-weight: bold; height: 20px !important;overflow: hidden;">@context?.Name</div>
                <div style="height: 60px !important;overflow: hidden;">
                    @context?.Description
                </div>
            </div>
        </FluentCard>
    </OptionTemplate>
</FluentListbox>
    <div style="text-align: right;padding-right: 24px;">
        <FluentAnchor Style="@((GetNextEnabled)?"":"display:none;")" Href="#" OnClick="@(()=>GetNext())">Next @PageSize
        </FluentAnchor>
    </div>

}

@code {
    [Parameter]
    public int PageSize { get; set; }
    [Parameter]
    public int Count { get; set; }
    [Parameter]
    public List<Station>? Stations { get; set; }
    private Func<int, int, IEnumerable<Station>> _getStations = default!;
    [Parameter]
    public Func<int, int, IEnumerable<Station>> GetStations
    {
        get => _getStations;
        set
        {
            SelectedStation = null;
            _getStations = value;
        }
    }

    private Station? SelectedStation { get; set; }

    private bool GetNextEnabled => Stations?.Count < Count;

    private void GetNext()
    {
        if (GetNextEnabled)
        {
            Stations!.AddRange(GetStations(Stations.Count, PageSize).ToList());
        }
    }

}